translations:

# Markdown
- name: 'md:permissions'
  parallel-group: 'group3'
  src: 'doc/**/permission*.md'
  skip-patterns:
  - !!js/regexp /(^#+|^\s*$|^[^a-zA-Z]+$|^\s*```|^---)/
  patterns:
  - pattern: '| Action'
    replace: '| ${action}'
  - pattern: '| Create new issue'
    replace: '| ${createNewIssue}'
  - pattern: '| Leave comments'
    replace: '| ${leaveComments}'
  - pattern: '| Pull project code'
    replace: '| ${pullProjectCode}'
  - pattern: '| Download project'
    replace: '| ${downlaodProject}'
  - pattern: '| Create code snippets'
    replace: '| ${createCodeSnippets}'
  - pattern: '| Manage issue tracker'
    replace: '| ${manageIssueTracker}'
  - pattern: '| Manage labels'
    replace: '| ${manageLabels}'
  - pattern: '| Manage merge requests'
    replace: '| ${manageMergeRequests}'
  - pattern: '| Create new merge request'
    replace: '| ${createNewMergeRequests}'
  - pattern: '| Create new branches'
    replace: '| ${createNewBranches}'
  - pattern: '| Push to non-protected branches'
    replace: '| ${pushToNonProtectedBranches}'
  - pattern: '| Force push to non-protected branches'
    replace: '| ${forcePushToNonProtectedBranches}'
  - pattern: '| Remove non-protected branches'
    replace: '| ${removeNonProtectedBranches}'
  - pattern: '| Add tags'
    replace: '| ${addTags}'
  - pattern: '| Write a wiki'
    replace: '| ${writeAWiki}'
  - pattern: '| Create new milestones'
    replace: '| ${createNewMilestones}'
  - pattern: '| Add new team members'
    replace: '| ${addNewTeamMembers}'
  - pattern: '| Push to protected branches'
    replace: '| ${pushToProtectedBranches}'
  - pattern: '| Enable/disable branch protection'
    replace: '| ${enableDisableBranchProtection}'
  - pattern: '| Turn on/off prot. branch push for devs'
    replace: '| ${turnOnOffProtBranchPushForDevs}'
  - pattern: '| Rewrite/remove git tags'
    replace: '| ${rewriteRemoveGitTags}'
  - pattern: '| Edit project'
    replace: '| ${editProject}'
  - pattern: '| Add deploy keys to project'
    replace: '| ${addDeployKeysToProject}'
  - pattern: '| Configure project hooks'
    replace: '| ${configureProjectHooks}'
  - pattern: '| Switch visibility level'
    replace: '| ${switchVisibilityLevel}'
  - pattern: '| Transfer project to another namespace'
    replace: '| ${transferProjectToAnotherNamespace}'
  - pattern: '| Remove project'
    replace: '| ${removeProject}'
  - pattern: '| Force push to protected branches'
    replace: '| ${forcePushToProtectedBranches}'
  - pattern: '| Remove protected branches'
    replace: '| ${removeProtectedBranches}'
  - pattern: !!js/regexp /In order for a group to appear as public and be browsable, it must contain at\nleast one public project\./
    replace: '${inOrderForAGroupToAppearAsPublicAndBeBrowsableItMustContainAtLeastOnePublicProject}'
    complete-pattern: true
  - pattern: 'Any user can remove themselves from a group, unless they are the last Owner of the group.'
    replace: '${anyUserCanRemoveThemselvesFromAGroupUnlessTheyAreTheLastOwnerOfTheGroup}'
    complete-pattern: true
  - pattern: '| Browse group'
    replace: '| ${browseGroup}'
  - pattern: '| Edit group'
    replace: '| ${editGroup}'
  - pattern: '| Create project in group'
    replace: '| ${createProjectInGroup}'
  - pattern: '| Manage group members'
    replace: '| ${manageGroupMembers}'
  - pattern: '| Remove group'
    replace: '| ${removeGroup}'
  - pattern: !!js/regexp /On public projects the Guest role is not enforced.  \nAll users will be able to create issues, leave comments, and pull or download the project code./
    replace: '${onPublicProjectTheGuestRoleIsNotEnforcedAllUsersWillBeAbleToCreateIssuesLeaveCommentsAndPullOrDownloadTheProjectCode}'
    complete-pattern: true
    evaluate-when: "semver.lt(version, '8.6.0')"
  - pattern: !!js/regexp /To add or import a user, you can follow the \[project users and members\ndocumentation\]\(doc\/workflow\/add-user\/add-user\.md\)\./
    replace: '${toAddOrImportAUserYouCanFollowTheProjectUsersAndMembersDocumentation}'
    complete-pattern: true
  - pattern: 'Users have different abilities depending on the access level they have in a particular group or project.'
    replace: '${usersHaveDifferentAbilitiesDependingOnTheAccessLevelTheyHaveInAParticularGroupOrProject}'
    complete-pattern: true
    evaluate-when: "semver.lt(version, '8.10.0')"
  - pattern: 'If a user is both in a project group and in the project itself, the highest permission level is used.'
    replace: '${ifAUserIsBothInAProjectGroupAndInTheProjectItselfTheHighestPermissionLevelIsUsed}'
    complete-pattern: true
    evaluate-when: "semver.lt(version, '8.10.0')"
  - pattern: 'If a user is a GitLab administrator they receive all permissions.'
    replace: '${ifAUserIsAGitLabAdministratorTheyReceiveAllPermissions}'
    complete-pattern: true
    evaluate-when: "semver.lt(version, '8.10.0')"
